<!-- src/App.svelte -->
<script>
  import { Router, Route, Link } from 'svelte-navigator';
  import { onMount } from 'svelte';
  import { authService } from './utils/api';
  import { fetchTradingStatus, fetchSymbols } from './stores/tradingStore';
  
  // Components
  import Dashboard from './routes/Dashboard.svelte';
  import Trading from './routes/Trading.svelte';
  import Positions from './routes/Positions.svelte';
  import Symbols from './routes/Symbols.svelte';
  import Login from './routes/Login.svelte';
  import Settings from './routes/Settings.svelte';
  
  // Notifications
  import { NotificationDisplay } from 'svelte-notifications';
  
  let isNavOpen = false;
  
  // Check auth status
  let isAuthenticated = false;
  let user = null;
  
  onMount(() => {
    isAuthenticated = authService.isAuthenticated();
    user = authService.getUser();
    
    if (isAuthenticated) {
      // Fetch initial data
      fetchTradingStatus();
      fetchSymbols();
    }
  });
  
  const logout = async () => {
    await authService.logout();
    window.location.href = '/login';
  };
  
  const toggleNav = () => {
    isNavOpen = !isNavOpen;
  };
</script>

<Router>
  <div class="app-container">
    <NotificationDisplay />
    
    {#if isAuthenticated}
      <!-- Main Navigation -->
      <nav class="main-nav bg-gray-800 text-white">
        <div class="nav-header">
          <div class="logo">
            <span class="logo-icon">ðŸ“ˆ</span>
            <span class="logo-text">CryptoBot</span>
          </div>
          <button class="nav-toggle" on:click={toggleNav}>
            <svg viewBox="0 0 24 24" width="24" height="24">
              <path fill="currentColor" d="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z" />
            </svg>
          </button>
        </div>
        
        <ul class="nav-items {isNavOpen ? 'open' : ''}">
          <li>
            <Link to="/">
              <svg viewBox="0 0 24 24" width="18" height="18"><path fill="currentColor" d="M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z" /></svg>
              Dashboard
            </Link>
          </li>
          <li>
            <Link to="/trading">
              <svg viewBox="0 0 24 24" width="18" height="18"><path fill="currentColor" d="M15,5H17V3H15M15,21H17V19H15M11,5H13V3H11M19,5H21V3H19M19,9H21V7H19M19,21H21V19H19M19,13H21V11H19M19,17H21V15H19M3,5H5V3H3M3,9H5V7H3M3,13H5V11H3M3,17H5V15H3M3,21H5V19H3M11,21H13V19H11M7,21H9V19H7M7,5H9V3H7V5Z" /></svg>
              Trading
            </Link>
          </li>
          <li>
            <Link to="/positions">
              <svg viewBox="0 0 24 24" width="18" height="18"><path fill="currentColor" d="M3,11H11V3H3M3,21H11V13H3M13,21H21V13H13M13,3V11H21V3" /></svg>
              Positions
            </Link>
          </li>
          <li>
            <Link to="/symbols">
              <svg viewBox="0 0 24 24" width="18" height="18"><path fill="currentColor" d="M7,15H9C9,16.08 10.37,17 12,17C13.63,17 15,16.08 15,15C15,13.9 13.96,13.5 11.76,12.97C9.64,12.44 7,11.78 7,9C7,7.21 8.47,5.69 10.5,5.18V3H13.5V5.18C15.53,5.69 17,7.21 17,9H15C15,7.92 13.63,7 12,7C10.37,7 9,7.92 9,9C9,10.1 10.04,10.5 12.24,11.03C14.36,11.56 17,12.22 17,15C17,16.79 15.53,18.31 13.5,18.82V21H10.5V18.82C8.47,18.31 7,16.79 7,15Z" /></svg>
              Symbols
            </Link>
          </li>
          <li>
            <Link to="/settings">
              <svg viewBox="0 0 24 24" width="18" height="18"><path fill="currentColor" d="M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z" /></svg>
              Settings
            </Link>
          </li>
          <li>
            <a href="#" on:click|preventDefault={logout}>
              <svg viewBox="0 0 24 24" width="18" height="18"><path fill="currentColor" d="M16,17V14H9V10H16V7L21,12L16,17M14,2A2,2 0 0,1 16,4V6H14V4H5V20H14V18H16V20A2,2 0 0,1 14,22H5A2,2 0 0,1 3,20V4A2,2 0 0,1 5,2H14Z" /></svg>
              Logout
            </a>
          </li>
        </ul>
      </nav>
      
      <!-- Main Content -->
      <main class="main-content">
        <div class="content-header">
          <h1>
            <Route path="/" component={Dashboard} />
            <Route path="/trading">Trading</Route>
            <Route path="/positions">Positions</Route>
            <Route path="/symbols">Symbols</Route>
            <Route path="/settings">Settings</Route>
          </h1>
          
          {#if user}
            <div class="user-info">
              <span class="username">{user.username}</span>
            </div>
          {/if}
        </div>
        
        <div class="content-body">
          <Route path="/" component={Dashboard} />
          <Route path="/trading" component={Trading} />
          <Route path="/positions" component={Positions} />
          <Route path="/symbols" component={Symbols} />
          <Route path="/settings" component={Settings} />
        </div>
      </main>
    {:else}
      <!-- Login Route -->
      <Route path="*" component={Login} />
    {/if}
  </div>
</Router>

<style>
  :global(body, html) {
    margin: 0;
    padding: 0;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
      Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    height: 100%;
    background-color: #f5f7fa;
  }
  
  :global(#app) {
    height: 100%;
  }
  
  .app-container {
    display: flex;
    height: 100vh;
  }
  
  .main-nav {
    width: 240px;
    min-width: 240px;
    background-color: #1a202c;
    height: 100%;
    overflow-y: auto;
    transition: all 0.3s ease;
  }
  
  .nav-header {
    padding: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .logo {
    display: flex;
    align-items: center;
    font-weight: 600;
    font-size: 1.25rem;
  }
  
  .logo-icon {
    margin-right: 0.5rem;
  }
  
  .nav-toggle {
    display: none;
    background: none;
    border: none;
    color: white;
    cursor: pointer;
  }
  
  .nav-items {
    list-style: none;
    padding: 0;
    margin: 1rem 0;
  }
  
  .nav-items li a {
    display: flex;
    align-items: center;
    padding: 0.75rem 1.5rem;
    color: rgba(255, 255, 255, 0.7);
    text-decoration: none;
    transition: all 0.2s ease;
  }
  
  .nav-items li a:hover {
    background-color: rgba(255, 255, 255, 0.1);
    color: white;
  }
  
  .nav-items li a svg {
    margin-right: 0.75rem;
  }
  
  .main-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    overflow-y: auto;
  }
  
  .content-header {
    padding: 1rem 2rem;
    background-color: white;
    border-bottom: 1px solid #e2e8f0;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  
  .content-header h1 {
    font-size: 1.5rem;
    font-weight: 500;
    margin: 0;
  }
  
  .content-body {
    padding: 2rem;
    flex: 1;
  }
  
  .user-info {
    display: flex;
    align-items: center;
  }
  
  .username {
    margin-left: 0.5rem;
    font-weight: 500;
  }
  
  @media (max-width: 768px) {
    .main-nav {
      width: 80px;
      min-width: 80px;
    }
    
    .logo-text {
      display: none;
    }
    
    .nav-toggle {
      display: block;
    }
    
    .nav-items {
      display: none;
    }
    
    .nav-items.open {
      display: block;
    }
    
    .content-header {
      padding: 1rem;
    }
    
    .content-body {
      padding: 1rem;
    }
  }
</style>
